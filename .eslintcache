[{"/home/james/github-finder/src/components/users/Search.js":"1","/home/james/github-finder/src/App.js":"2","/home/james/github-finder/src/components/users/User.js":"3","/home/james/github-finder/src/components/users/Users.js":"4","/home/james/github-finder/src/components/Pages/About.js":"5","/home/james/github-finder/src/components/repos/RepoItem.js":"6","/home/james/github-finder/src/components/repos/Repos.js":"7","/home/james/github-finder/src/components/layout/Alert.js":"8","/home/james/github-finder/src/components/layout/Navbar.js":"9","/home/james/github-finder/src/index.js":"10","/home/james/github-finder/src/context/types.js":"11","/home/james/github-finder/src/components/users/UserItem.js":"12","/home/james/github-finder/src/context/github/GithubState.js":"13","/home/james/github-finder/src/context/github/githubReducer.js":"14"},{"size":1801,"mtime":1607781943020,"results":"15","hashOfConfig":"16"},{"size":4641,"mtime":1607781718260,"results":"17","hashOfConfig":"16"},{"size":3110,"mtime":1607724090927,"results":"18","hashOfConfig":"16"},{"size":837,"mtime":1607029725743,"results":"19","hashOfConfig":"16"},{"size":265,"mtime":1607267213944,"results":"20","hashOfConfig":"16"},{"size":329,"mtime":1607269364197,"results":"21","hashOfConfig":"16"},{"size":290,"mtime":1607269364198,"results":"22","hashOfConfig":"16"},{"size":250,"mtime":1607179908768,"results":"23","hashOfConfig":"16"},{"size":854,"mtime":1607267213946,"results":"24","hashOfConfig":"16"},{"size":355,"mtime":1607029725745,"results":"25","hashOfConfig":"16"},{"size":319,"mtime":1607726040966,"results":"26","hashOfConfig":"16"},{"size":870,"mtime":1607267213950,"results":"27","hashOfConfig":"16"},{"size":1684,"mtime":1607782732331,"results":"28","hashOfConfig":"16"},{"size":455,"mtime":1607781669147,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f9f4za",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/james/github-finder/src/components/users/Search.js",[],"/home/james/github-finder/src/App.js",["61"],"import React, {useState, Fragment, useEffect} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Alert from './components/layout/Alert'\nimport Users from './components/users/Users'\nimport User from './components/users/User'\nimport Search from './components/users/Search'\nimport About from './components/Pages/About'\nimport axios from 'axios';\nimport GithubState from './context/github/GithubState'\n\nimport './App.css';\n\n// this is the parent component of our application, all other components enter through here\nconst App = () => {\n\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  // FUNCTION that fetches Github user data from API, loads user data to DOM upon start of app\n  useEffect(async () =>{\n\n    // set state loading key value to true to show spinner gif\n    setLoading(true)\n\n    // GET request to Github API for first 30 users upon initial render\n    const res = await axios.get(\n          `https://api.github.com/users?client_id=${\n            process.env.REACT_APP_GITHUB_CLIENT_ID\n          }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n    // update state users key value with users data returned from API\n    setUsers(res.data)\n\n    // set state loading key value to false to stop spinner gif\n    setLoading(false)\n    // eslint-disable-next-line\n  }, [])\n\n\n  //  FUNCTION will clear searched users from state object\n  const clearUsers = () => {\n    setUsers([])\n    setLoading(false);\n  };\n\n  // FUNCTION will alert users to enter text for search query\n  const showAlert = (msg, type) =>{\n    setAlert({ msg, type })\n    setTimeout(()=> setAlert(null), 5000)\n  }\n\n  // FUNCTION will GET a single Github users info\n  const getUser = async (username) =>{\n\n    // set state loading key value to true to show spinner gif\n    setLoading(true);\n\n    //  add user login data returned from searchUsers function\n    const res = await axios.get(\n       `https://api.github.com/users/${username}?client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${\n        process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n    // update the state to show single user data returned from search\n    setUser( res.data );\n\n    // update loading attribute to false to stop spinner\n    setLoading(false);\n  }\n\n  // FUNCTION with GET all public repos for a single user\n  const getUserRepos = async (username) =>{\n\n    // set state loading key value to true to show spinner gif\n    setLoading( true );\n\n    //  add user login data returned from searchUsers function\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${\n          process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n\n    // update the state 'repos' to display user public repositories\n    setRepos( res.data );\n\n    // reset loading state attribute to false\n    setLoading( false );\n  }\n\n    return (\n      <GithubState>\n        <Router>\n\n          <div className=\"App\">\n\n            <Navbar />\n            <div className='container'>\n\n                <Alert alert={alert}/>\n                <Switch>\n                  <Route exact path='/' render={props => (\n                    <Fragment>\n                      <Search\n                        clearUsers={clearUsers}\n                        // this boolean value will show clear button when users array has search result\n                        showClear={users.length > 0 ? true : false}\n                        setAlert={showAlert}\n                        />\n                      <Users\n                        loading={loading}\n                        users={users}\n                      />\n                    </Fragment>\n                  )}/>\n                  <Route exact path='/about' component={About}/>\n                  <Route\n                    exact path='/user/:login'\n                    render={props => (\n                      <User\n                        {...props}\n                        getUser={getUser}\n                        getUserRepos={getUserRepos}\n                        user={user}\n                        repos={repos}\n                        loading={loading}\n                      />\n                    )}\n                  />\n                </Switch>\n\n\n              </div>\n          </div>\n        </Router>\n      </GithubState>\n    );\n}\n\nexport default App;\n","/home/james/github-finder/src/components/users/User.js",["62"],"/home/james/github-finder/src/components/users/Users.js",[],["63","64"],"/home/james/github-finder/src/components/Pages/About.js",[],"/home/james/github-finder/src/components/repos/RepoItem.js",[],"/home/james/github-finder/src/components/repos/Repos.js",[],"/home/james/github-finder/src/components/layout/Alert.js",[],"/home/james/github-finder/src/components/layout/Navbar.js",[],["65","66"],"/home/james/github-finder/src/index.js",[],"/home/james/github-finder/src/context/types.js",[],"/home/james/github-finder/src/components/users/UserItem.js",[],"/home/james/github-finder/src/context/github/GithubState.js",["67","68","69"],"/home/james/github-finder/src/context/github/githubReducer.js",["70","71","72","73","74"],{"ruleId":"75","severity":1,"message":"76","line":24,"column":13,"nodeType":"77","endLine":41,"endColumn":4},{"ruleId":"75","severity":1,"message":"78","line":15,"column":6,"nodeType":"79","endLine":15,"endColumn":8,"suggestions":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":8,"column":3,"nodeType":"89","messageId":"90","endLine":8,"endColumn":14},{"ruleId":"87","severity":1,"message":"91","line":9,"column":3,"nodeType":"89","messageId":"90","endLine":9,"endColumn":11},{"ruleId":"87","severity":1,"message":"92","line":10,"column":3,"nodeType":"89","messageId":"90","endLine":10,"endColumn":12},{"ruleId":"87","severity":1,"message":"88","line":4,"column":3,"nodeType":"89","messageId":"90","endLine":4,"endColumn":14},{"ruleId":"87","severity":1,"message":"91","line":5,"column":3,"nodeType":"89","messageId":"90","endLine":5,"endColumn":11},{"ruleId":"87","severity":1,"message":"92","line":6,"column":3,"nodeType":"89","messageId":"90","endLine":6,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":10,"column":1,"nodeType":"95","endLine":25,"endColumn":2},{"ruleId":"96","severity":1,"message":"97","line":11,"column":3,"nodeType":"98","messageId":"99","endLine":23,"endColumn":4},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getUser', 'getUserRepos', and 'match.params.login'. Either include them or remove the dependency array. If 'getUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["100"],"no-native-reassign",["101"],"no-negated-in-lhs",["102"],["101"],["102"],"no-unused-vars","'CLEAR_USERS' is defined but never used.","Identifier","unusedVar","'GET_USER' is defined but never used.","'GET_REPOS' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",{"desc":"103","fix":"104"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [getUser, getUserRepos, match.params.login]",{"range":"105","text":"106"},[514,516],"[getUser, getUserRepos, match.params.login]"]